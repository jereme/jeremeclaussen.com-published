<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Jereme Claussen</title><description></description><link>http://publish.jeremeclaussen.com</link><language>en</language><lastBuildDate>Fri, 11 Feb 2022 22:23:23 +0000</lastBuildDate><pubDate>Fri, 11 Feb 2022 22:23:23 +0000</pubDate><ttl>250</ttl><atom:link href="http://publish.jeremeclaussen.com/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">http://publish.jeremeclaussen.com/posts/first-post</guid><title>A post about Swifty Things</title><description>My first post where I exercise the flexibility of the formatting</description><link>http://publish.jeremeclaussen.com/posts/first-post</link><pubDate>Fri, 11 Feb 2022 14:35:00 +0000</pubDate><content:encoded><![CDATA[<h1>A post about Swifty Things</h1><p>Have you ever wanted to write a post about Swifty things but just weren't sure how it should look. In this post we will explore some of what you can accomplish.</p><h2>Headers</h2><p>There are so many headers at your disposal. For example:</p><h1>Header 1</h1><h2>Header 2</h2><h3>Header 3</h3><h4>Header 4</h4><h5>Header 5</h5><p>I think it goes on forever, but after 3 who are you kidding?</p><h2>Font Styling</h2><p>All of the normal <strong>bold</strong>, <em>italic</em> and other font styles work.</p><h2>Tables</h2><p>You can easily make tables and they look good in markdown and plain text!</p><table><thead><tr><th>Centered Header</th><th>Left Aligned Header</th><th>Right Aligned Header</th></tr></thead><tbody><tr><td>Value</td><td>Value</td><td>Value</td></tr></tbody></table><h2>Code</h2><p>You can easily provide code blocks with Swift syntax highlight using ```swift</p><pre><code><span class="keyword">enum</span> PersonalPronoun {
  <span class="keyword">case</span> heHis, sheHers, theyThem
}

<span class="keyword">struct</span> Person { 
  <span class="keyword">let</span> pronoun: <span class="type">PersonalPronoun</span>
  <span class="keyword">let</span> name: <span class="type">String</span>
}
</code></pre>]]></content:encoded></item></channel></rss>